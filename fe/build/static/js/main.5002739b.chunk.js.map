{"version":3,"sources":["utils/auth.js","config/config.js","pages/Home.js","pages/SignUp/SignUp.js","pages/SignIn/SignIn.js","pages/PasswordReset/PasswordReset.js","pages/PasswordChange/PasswordChange.js","pages/Tweets/TweetItem.js","pages/Tweets/TweetActions.js","pages/Tweets/TweetList.js","pages/Tweets/Home.js","pages/Compose/Compose.js","components/Appbar.js","App.js","serviceWorker.js","index.js"],"names":["isAuthorised","Storage","JSON","parse","localStorage","getItem","ex","config","auth","isAuthenticated","getData","getAuth","signInURL","withStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","marginTop","props","classes","className","useStyles","makeStyles","width","marginLeft","spacing","marginRight","breakpoints","up","avatar","margin","height","color","secondary","main","form","submit","container","flexDirection","alignItems","SignUp","history","useHistory","useState","username","setUsername","password","setPassword","authenticate","user","setItem","stringify","console","log","saveAuthorisation","_location","location","_route","state","from","pathname","push","Fragment","Paper","elevation","Typography","component","variant","onSubmit","event","preventDefault","displayName","email","noValidate","TextField","value","onInput","e","target","required","fullWidth","id","label","name","autoComplete","autoFocus","type","Button","keys","buttonPadding","marginBottom","SignIn","padding","gutterBottom","onClick","removeItem","logout","paramdict","getAuthorisation","method","headers","body","fetch","then","response","json","data","access","refresh","catch","err","alert","access_token","refresh_token","style","to","PasswordReset","replace","PasswordChange","styles","StyleSheet","create","row","borderBottomWidth","hairlineWidth","borderBottomColor","rowIcon","borderRadius","boxShadow","rowData","flex","rowDataText","fontSize","textTransform","rowDataSubText","opacity","TweetItem","tweet","item","View","Image","source","pic","Text","date","private","aboutme","description","actionsContainer","actionButton","actionButtonDestructive","actionButtonText","textAlign","TweetActions","TouchableHighlight","onPress","TweetList","tweets","SwipeableFlatList","bounceFirstRowOnMount","maxSwipeDistance","renderItem","renderQuickActions","centering","THome","React","setTweets","loading","setLoading","useEffect","a","res","results","fetchData","ScrollView","noSpacer","noScroll","ActivityIndicator","size","getAccessToken","Compose","setTweet","postTweet","priv","ok","toString","myArray","img_url","Math","floor","random","length","createBrowserHistory","toolbar","paddingRight","toolbarIcon","mixins","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","drawerPaperCollapsed","appBarSpacer","content","paddingTop","paddingBottom","fixedHeight","footer","left","bottom","fontStyle","Dashboard","open","setOpen","collapsed","setCollapsed","setTitle","handleDrawerCollapsed","onItemClick","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","noWrap","Badge","badgeContent","Drawer","Divider","List","ListItem","button","Link","ListItemIcon","ListItemText","primary","exact","path","Home","App","_config","Component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5002739b.chunk.js","sourcesContent":["const localStorageAuthKey = 'fwo:auth'\nexport function saveAuthorisation(user) {\n    if (typeof Storage !== 'undefined') {\n        try {\n            user.isAuthorised = true;\n            localStorage.setItem(localStorageAuthKey, JSON.stringify(user))\n        } catch (ex) {\n            console.log(ex)\n        }\n    } else {\n        // No web storage Support.\n    }\n}\n\nexport function logout() {\n    if (typeof Storage !== 'undefined') {\n        try {\n            const auth = JSON.parse(localStorage.getItem(localStorageAuthKey))\n            auth.isAuthorised = false;\n            auth.displayName = '';\n            localStorage.setItem(localStorageAuthKey, JSON.stringify(auth))\n        } catch (ex) {\n            console.log(ex)\n        }\n    } else {\n        // No web storage Support.\n    }\n}\n\nexport function getAuth() {\n    try {\n        if (typeof Storage !== 'undefined') {\n            const auth = JSON.parse(localStorage.getItem(localStorageAuthKey))\n            if (auth === null) { auth = {}; auth.isAuthorised = false }\n            return auth;\n        } else {\n            return false\n        }\n    } catch (ex) {\n        return false\n    }\n}\n\nexport function isAuthorised() {\n    try {\n        if (typeof Storage !== 'undefined') {\n            const auth = JSON.parse(localStorage.getItem(localStorageAuthKey))\n            return auth.isAuthorised || false;\n        } else {\n            return false\n        }\n    } catch (ex) {\n        return false\n    }\n}\n","import React, { lazy } from 'react'\nimport { isAuthorised } from '../utils/auth'\nimport { getAuth } from '../utils/auth'\n\nconst config = {\n  auth: {\n    isAuthenticated: isAuthorised,\n    getData: () => {\n      return getAuth()\n    },\n    signInURL: '/signin',\n  },\n}\n\nexport default config\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n    marginTop: '100px'\n  }\n});\n\nfunction Home(props) {\n  const { classes } = props;\n\n  return (\n      <div className={classes.root}>\n        <h1>Landing page</h1>\n      </div>\n  );\n}\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Home);\n","import { useHistory } from 'react-router-dom'\nimport { saveAuthorisation, isAuthorised } from '../../utils/auth'\n//import { useIntl } from 'react-intl'\n//import Page from 'material-ui-shell/lib/containers/Page/Page'\nimport React, { useState, useContext } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\n//import Button from 'material-ui/Button'\nimport Paper from '@material-ui/core/Paper'\n//import MenuContext from 'material-ui-shell/lib/providers/Menu/Context'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    width: 'auto',\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(620 + theme.spacing(6))]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n      3\n    )}px`,\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    width: 192,\n    height: 192,\n    color: theme.palette.secondary.main,\n  },\n  form: {\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: `100%`,\n  },\n}))\n\nconst SignUp = () => {\n  const classes = useStyles()\n  //const intl = useIntl()\n  const history = useHistory()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  //const { setAuthMenuOpen } = useContext(MenuContext)\n\n  function handleSubmit(event) {\n    event.preventDefault()\n\n    // fwo: register new user!\n    //.. return userid\n\n    // save more: name, group, userid\n    authenticate({\n      displayName: 'User',\n      email: username,\n    })\n  }\n\n  const authenticate = (user) => {\n    saveAuthorisation(user)\n    let _location = history.location\n    let isAuth = isAuthorised()\n    //setAuthMenuOpen(false)\n    if (isAuth) {\n      let _route = '/home'\n      if (_location.state && _location.state.from) {\n        _route = _location.state.from.pathname\n        history.push(_route)\n      } else {\n        history.push(_route)\n      }\n    }\n  }\n\n  return (\n    // <Page\n    //   pageTitle={intl.formatMessage({\n    //     id: 'sign_up',\n    //     defaultMessage: ' Sign up',\n    //   })}\n    //   onBackClick={() => {\n    //     history.goBack()\n    //   }}\n    // >\n    <React.Fragment>\n      <Paper className={classes.paper} elevation={6}>\n        <div className={classes.container}>\n          <Typography component=\"h1\" variant=\"h5\">\n            {'Sign up'}\n          </Typography>\n          <form className={classes.form} onSubmit={handleSubmit} noValidate>\n            <TextField\n              value={username}\n              onInput={(e) => setUsername(e.target.value)}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label={'Username'}\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n            />\n            <TextField\n              value={username}\n              onInput={(e) => setUsername(e.target.value)}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label={'E-Mail'}\n              name=\"email\"\n              autoComplete=\"email\"\n            />\n            <TextField\n              value={password}\n              onInput={(e) => setPassword(e.target.value)}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label={'Password'}\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <TextField\n              value={password}\n              onInput={(e) => setPassword(e.target.value)}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password_confirm\"\n              label={'Confirm Password'}\n              type=\"password\"\n              id=\"password_confirm\"\n              autoComplete=\"current-password\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              {'Sign up'}\n            </Button>\n          </form>\n        </div>\n      </Paper>\n    </React.Fragment>\n  )\n}\n\nexport default SignUp\n","import { useHistory } from 'react-router-dom'\n//import Page from 'material-ui-shell/lib/containers/Page/Page'\nimport React, { useState, useContext } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\n//import Button from '@material-ui/Button'\nimport Paper from '@material-ui/core/Paper'\n//import MenuContext from 'material-ui-shell/lib/providers/Menu/Context'\nimport { Link } from 'react-router-dom'\n\n// save keys to local storage\nconst localStorageAuthKey = 'twtr:auth';\nfunction saveAuthorisation(keys) {\n  if (typeof Storage !== 'undefined') {\n      try {\n          localStorage.setItem(localStorageAuthKey, JSON.stringify(keys));\n\n      } catch (ex) {\n          console.log(ex);\n      }\n  } else {\n      // No web storage Support :-(\n  }\n}\nfunction getAuthorisation() {\n  if (typeof Storage !== 'undefined') {\n      try {\n        var keys = JSON.parse(localStorage.getItem(localStorageAuthKey));\n        return keys;\n\n      } catch (ex) {\n          console.log(ex);\n      }\n  } else {\n      // No web storage Support :-(\n  }\n}\nfunction logout() {\n  if (typeof Storage !== 'undefined') {\n    try {\n        localStorage.removeItem(localStorageAuthKey);\n    } catch (ex) {\n        console.log(ex);\n    }\n  } else {\n      // No web storage Support :-(\n  }\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    width: 'auto',\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(620 + theme.spacing(6))]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n      3\n    )}px`,\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    width: 192,\n    height: 192,\n    color: theme.palette.secondary.main,\n  },\n  form: {\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: `100%`,\n  },\n  buttonPadding: {    \n    //padding: '30px',  \n    marginBottom: '30px', \n  },\n}))\n\n\nconst SignIn = () => {\n  const classes = useStyles()\n  const history = useHistory()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  // we submit username and password, we receive\n  // access and refresh tokens in return. These\n  // tokens encode the userid\n  function handleSubmit(event) {\n    event.preventDefault()\n\n    //console.log(username);\n    //console.log(password);\n    const paramdict = {\n      'name': username,\n      'password': password\n    }\n    const config = {\n      method: 'POST',\n      headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(paramdict)\n    }\n    console.log(\"sending out:\");\n    console.log(paramdict);\n\n    // verify user/pwd, get encoded userid as access and refresh tokens in return\n    //fetch(\"http://localhost:5000/login\", config)\n    //fetch(`${process.env.BE_NETWORK}:${process.env.BE_PORT}/login`, config)\n    fetch(\"/login\", config)\n      .then(response => response.json())\n      .then(data => {\n\n        // save to local storage\n        console.log(\"received these keys in return:\")\n        console.log(data);\n        console.log(data[0].access_token);\n        console.log(data[0].refresh_token);\n        console.log('---');\n        saveAuthorisation({\n          access: data[0].access_token,\n          refresh: data[0].refresh_token,\n        });\n\n        // back to landing page!\n        history.push(\"/\");\n      })\n      .catch( (err) => {\n        alert(err);\n        console.log(err);\n      });\n  }\n\n  // we submit our tokens and receive\n  // a refreshed a renewed access\n  // token unless the refresh token\n  // has expired\n  function handleFastSignIn() {\n\n    const paramdict = getAuthorisation();\n    const config = {\n      method: 'POST',\n      headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(paramdict)\n    }\n\n    // verify user/pwd, get encoded userid as access and refresh tokens in return\n    //fetch(\"http://localhost:5000/fastlogin\", config)\n    fetch(\"/fastlogin\", config)\n      .then(response => response.json())\n      .then(data => {\n\n        // save to local storage\n        console.log(\"received these keys in return:\")\n        console.log(data);\n        saveAuthorisation({\n          access: data[0][0],\n          refresh: data[0][1],\n        });\n\n        // back to landing page!\n        history.push(\"/\");\n      })\n      .catch( (err) => {\n        alert(err);\n        console.log(err);\n      });\n  }\n\n  // Logout attempt\n  const handleSignOut = () => { \n    logout();\n\n    // back to landing page!\n    history.push(\"/\");\n  }\n\n\n  return (\n    <React.Fragment>\n      <Paper className={classes.paper} elevation={6}>\n        <div className={classes.container}>\n          <Typography component=\"h1\" variant=\"h5\" className={classes.padding}>\n            {'Sign Out'}\n          </Typography> \n          <Typography gutterBottom>If you are not the only one on this device.</Typography>\n          <Button fullWidth variant=\"contained\" margin=\"normal\" color=\"secondary\" onClick={handleSignOut} className={classes.buttonPadding}>\n            {'Sign Out'}\n          </Button>\n\n          <Typography component=\"h1\" variant=\"h5\" className={classes.padding}>\n            {'Fast Sign In'}\n          </Typography>\n          <Typography gutterBottom>If this is your device.</Typography>\n          <Button fullWidth variant=\"contained\" margin=\"normal\" color=\"primary\" onClick={handleFastSignIn} className={classes.buttonPadding}>\n            {'Sign In'}\n          </Button>\n\n          <Typography component=\"h1\" variant=\"h5\">\n            {'Password Sign In'}\n          </Typography>\n          <Typography gutterBottom>You may password-sign-in on any device.</Typography>\n          <form className={classes.form} onSubmit={handleSubmit} noValidate>\n            <TextField\n              value={username}\n              onInput={(e) => setUsername(e.target.value)}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label={'Username'}\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n            />\n            <TextField\n              value={password}\n              onInput={(e) => setPassword(e.target.value)}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label={'Password'}\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              {'Sign in'}\n            </Button>\n          </form>\n\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              width: '100%',\n              justifyContent: 'space-between',\n            }}\n          >\n            <Link to=\"/password_reset\">Forgot Password?</Link>\n            <Link to=\"/signup\">Register</Link>\n          </div>\n        </div>\n      </Paper>\n    </React.Fragment>\n  )\n}\n\nexport default SignIn\n","import { useHistory } from 'react-router-dom'\nimport { saveAuthorisation, isAuthorised } from '../../utils/auth'\nimport React, { useState, useContext } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    width: 'auto',\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(620 + theme.spacing(6))]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n      3\n    )}px`,\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    width: 192,\n    height: 192,\n    color: theme.palette.secondary.main,\n  },\n  form: {\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: `100%`,\n  },\n}))\n\nconst PasswordReset = () => {\n  const classes = useStyles()\n  const history = useHistory()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  // const { setAuthMenuOpen } = useContext(MenuContext)\n\n  function handleSubmit(event) {\n    event.preventDefault()\n\n    // fwo: send email to user with new temp password\n    //..\n\n    //..\n    \n    history.replace('/signin')\n  }\n\n  return (\n    <React.Fragment>\n      <Paper className={classes.paper} elevation={6}>\n        <div className={classes.container}>\n          <Typography component=\"h1\" variant=\"h5\">\n            {'Password reset'}\n          </Typography>\n          <form className={classes.form} onSubmit={handleSubmit} noValidate>\n            <TextField\n              value={username}\n              onInput={(e) => setUsername(e.target.value)}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label={'E-Mail'}\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              {'Reset Password'}\n            </Button>\n          </form>\n        </div>\n      </Paper>\n    </React.Fragment>\n  )\n}\n\nexport default PasswordReset\n","import { useHistory } from 'react-router-dom'\nimport { saveAuthorisation, isAuthorised } from '../../utils/auth'\nimport React, { useState, useContext } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    width: 'auto',\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(620 + theme.spacing(6))]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n      3\n    )}px`,\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    width: 192,\n    height: 192,\n    color: theme.palette.secondary.main,\n  },\n  form: {\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: `100%`,\n  },\n}))\n\nconst PasswordChange = () => {\n  const classes = useStyles()\n  const history = useHistory()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  // const { setAuthMenuOpen } = useContext(MenuContext)\n\n  function handleSubmit(event) {\n    event.preventDefault()\n\n    // fwo: change password or group or email or name!\n    // return userid\n\n    // store new name, email, group!\n    //..\n    \n    history.replace('/signin')\n  }\n\n  return (\n    <React.Fragment>\n      <Paper className={classes.paper} elevation={6}>\n        <div className={classes.container}>\n          <Typography component=\"h1\" variant=\"h5\">\n            {'Password reset'}\n          </Typography>\n          <form className={classes.form} onSubmit={handleSubmit} noValidate>\n            <TextField\n              value={username}\n              onInput={(e) => setUsername(e.target.value)}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label={'E-Mail'}\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              {'Reset Password'}\n            </Button>\n          </form>\n        </div>\n      </Paper>\n    </React.Fragment>\n  )\n}\n\nexport default PasswordChange\n","import React from \"react\";\nimport { View, Image, Text, StyleSheet } from \"react-native\";\n\nconst TweetItem = ({ item: tweet }) => {\n  return (\n    <View style={styles.row}>\n      <Image style={styles.rowIcon} source={tweet.pic} />\n      <View style={styles.rowData}>\n        <Text style={styles.rowDataText}>{`${tweet.date} ${tweet.user} ${tweet.private} ${tweet.aboutme}`}</Text>\n        <Text style={styles.rowDataSubText}>{tweet.description}</Text>\n      </View>\n    </View>\n  );\n};\n\n//rowIcon: consider adding, to handle BIG images:\n//resizeMode: 'contain'\n//resizeMode: 'cover'\n//resiceMode: 'center'\n// https://reactnative.dev/docs/image.html#resizemode\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 15,\n    marginBottom: 5,\n    backgroundColor: \"white\",\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: \"rgba(0,0,0,0.1)\"\n  },\n  rowIcon: {\n    width: 64,\n    height: 64,\n    marginRight: 20,\n    borderRadius: \"50%\",\n    boxShadow: \"0 1px 2px 0 rgba(0,0,0,0.1)\"\n  },\n  rowData: {\n    flex: 1\n  },\n  rowDataText: {\n    fontSize: 15,\n    textTransform: \"capitalize\",\n    color: \"#4b4b4b\"\n  },\n  rowDataSubText: {\n    fontSize: 13,\n    opacity: 0.8,\n    color: \"#a8a689\",\n    marginTop: 4\n  }\n});\n\nexport default TweetItem;","import React from \"react\";\nimport {\n  View,\n  TouchableHighlight,\n  Text,\n  Alert,\n  StyleSheet\n} from \"react-native\";\n\nconst styles = StyleSheet.create({\n  actionsContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    padding: 10\n  },\n  actionButton: {\n    padding: 10,\n    color: \"white\",\n    borderRadius: 6,\n    width: 90,\n    backgroundColor: \"lightblue\",\n    marginRight: 5,\n    marginLeft: 5\n  },\n  actionButtonDestructive: {\n    backgroundColor: \"pink\"\n  },\n  actionButtonText: {\n    textAlign: \"center\"\n  }\n});\n\nconst TweetActions = (props) => {\n  console.log(props);\n  return (\n    <View style={styles.actionsContainer}>\n      <TouchableHighlight\n        style={styles.actionButton}\n        onPress={() => {\n          alert(\"You could do something with this about-me action!\");\n        }}\n      >\n        <Text style={styles.actionButtonText}>Reply</Text>\n      </TouchableHighlight>\n      <TouchableHighlight\n        style={[styles.actionButton, styles.actionButtonDestructive]}\n        onPress={() => {\n          alert(\"You could do something with this up-vote action!\");\n        }}\n      >\n        <Text style={styles.actionButtonText}>Upvote</Text>\n      </TouchableHighlight>\n    </View>\n  );\n};\n\nexport default TweetActions;","import React from \"react\";\nimport { SwipeableFlatList } from \"react-native\";\n//import {SwipeableFlatList} from 'react-native-swipeable-flat-list';\nimport TweetItem from \"./TweetItem\";\nimport TweetActions from \"./TweetActions\";\n\nconst TweetList = ({ tweets }) => {\n  return (\n    <SwipeableFlatList\n      data={tweets}\n      bounceFirstRowOnMount={true}\n      maxSwipeDistance={160}\n      renderItem={TweetItem}\n      renderQuickActions={TweetActions}\n    />\n  );\n};\n\nexport default TweetList;\n","import React, { useState, useEffect } from 'react';\nimport { ScrollView, StyleSheet, ActivityIndicator } from \"react-native\";\nimport TweetList from \"./TweetList\";\n//import axios from 'axios';\n\nconst THome = () => {\n  const [tweets, setTweets] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);   \n  \n  useEffect(() => {\n    const fetchData = async () => {\n    //const res = await fetch(\"http://localhost:5000/tweets-results\");\n    //const res = await fetch(`${process.env.BE_NETWORK}:${process.env.BE_PORT}/tweets-results`);\n    const res = await fetch(\"/tweets-results\");\n      const { results } = await res.json();\n      console.log(results);\n      setTweets([...results]);\n\t  setLoading(false);\n    };\n \n    fetchData();\n  }, []);\n\n  return (\n    <ScrollView noSpacer={true} noScroll={true} style={styles.container}>\n\t  {loading ? (\n\t    <ActivityIndicator\n\t\t  style={[styles.centering]}\n\t\t  color=\"#ff8179\"\n\t\t  size=\"large\"\n\t    />\n\t  ) : (\n\t    <TweetList tweets={tweets} />\n\t  )}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"whitesmoke\",\n    marginTop: '60px'\n  },\n  centering: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 8,\n    height: \"100vh\"\n  }\n});\n\nexport default THome;\n","import { useHistory } from 'react-router-dom'\nimport { saveAuthorisation, isAuthorised } from '../../utils/auth'\n//import Page from 'material-ui-shell/lib/containers/Page/Page'\nimport React, { useState, useContext } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\n//import Button from '@material-ui/Button'\nimport Paper from '@material-ui/core/Paper'\n//import MenuContext from 'material-ui-shell/lib/providers/Menu/Context'\nimport { Link } from 'react-router-dom'\n\nconst localStorageAuthKey = 'twtr:auth';\nfunction getAccessToken() {\n  if (typeof Storage !== 'undefined') {\n      try {\n        var keys = JSON.parse(localStorage.getItem(localStorageAuthKey));\n        return keys.access;\n        // the refresh token is keys.refresh\n\n      } catch (ex) {\n          console.log(ex);\n      }\n  } else {\n      // No web storage Support :-(\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    width: 'auto',\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(720 + theme.spacing(6))]: {\n      width: 900,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n      3\n    )}px`,\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    width: 192,\n    height: 192,\n    color: theme.palette.secondary.main,\n  },\n  form: {\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: `100%`,\n  },\n}))\n\nconst Compose = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [tweet, setTweet] = useState('');\n  const [username, setUsername] = useState('');\n\n  // async launch POST with access token\n  const postTweet = async (user, description, priv, pic) => {\n    const access_token = getAccessToken();\n    console.log('access_token:');\n    console.log(access_token);\n    const paramdict = {\n      'user': user,\n      'description': description,\n      'private': priv,\n      'pic': pic,\n      'access-token': access_token,\n    }\n    console.log('postTweet paramdict:');\n    console.log(paramdict);\n\n    try {\n      const config = {\n          method: 'POST',\n          headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(paramdict)\n      }\n      //const response = await fetch(\"http://localhost:5000/tweet\", config);\n      //const response = await fetch(`${process.env.BE_NETWORK}:${process.env.BE_PORT}/tweet`, config);\n      const response = await fetch(\"/tweet\", config);\n      //const json = await response.json()\n      if (response.ok) {\n          //return json\n          //return response\n          console.log(\"success on send.\");\n          \n      } else {\n          alert(\"response: \" + response.toString());\n      }\n\n      try {\n        const data = await response.json();\n        console.log(\"on reply:\")\n        console.log(data);\n\n        // back to landing page!\n        history.push(\"/\");\n      } catch (err) {\n        console.log(err);\n        alert(\"exception on reply!\");\n      }\n\n    } catch (error) {\n      console.log(error);\n      alert(\"exception on send\");\n    }\n  };\n\n\n  function handleSubmit(event) {\n    event.preventDefault()\n\n    const priv = true;\n    //const username = 'Elon Musk';\n    const myArray = [\n      \"women\",\n      \"men\"\n    ];\n    const img_gender = myArray[Math.floor(Math.random()*myArray.length)];\n    const img_index = Math.floor(Math.random() * 100) + 1 ;\n    const img_url = 'https://randomuser.me/api/portraits/' + img_gender + '/' + img_index.toString() + '.jpg';\n    \n    postTweet(username, tweet, priv, img_url);  \n    alert('tweet posted!');\n  }\n\n  return (\n    <React.Fragment>\n      <Paper className={classes.paper} elevation={6}>\n        <div className={classes.container}>\n          <Typography component=\"h1\" variant=\"h5\">\n            {'Compose Tweet'}\n          </Typography>\n          <form className={classes.form} onSubmit={handleSubmit} noValidate>\n            <TextField\n              value={username}\n              onInput={(e) => setUsername(e.target.value)}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label={'User Name'}\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n            />\n            <TextField\n              value={tweet}\n              onInput={(e) => setTweet(e.target.value)}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"tweet\"\n              label={'Tweet'}\n              name=\"tweet\"\n              autoComplete=\"tweet\"\n              autoFocus\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              {'Submit'}\n            </Button>\n          </form>\n\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              width: '100%',\n              justifyContent: 'space-between',\n            }}\n          >\n          </div>\n        </div>\n      </Paper>\n    </React.Fragment>\n  )\n}\n\nexport default Compose","import React from 'react';\nimport clsx from 'clsx';\nimport { Router, Route, Link } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Badge from '@material-ui/core/Badge';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport LayersIcon from '@material-ui/icons/Layers';\n\nimport config from '../config/config'\n\n// import your components:\nimport Home from \"../pages/Home\";\nimport SignUp from \"../pages/SignUp/SignUp\";\nimport SignIn from \"../pages/SignIn/SignIn\";\nimport PasswordReset from \"../pages/PasswordReset/PasswordReset\";\nimport PasswordChange from \"../pages/PasswordChange/PasswordChange\";\nimport THome from \"../pages/Tweets/Home\";\nimport Compose from \"../pages/Compose/Compose\";\n\nconst drawerWidth = 240;\nconst history = createBrowserHistory();\n\n// css\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  drawerPaperCollapsed: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(0),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(0),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  footer: {\n    position: 'fixed',\n    left: 0,\n    bottom: 0,\n    width: '100%',\n    backgroundColor: 'grey',\n    color: 'white',\n    textAlign: 'center',\n    fontStyle: 'italic',\n  },\n}));\n\n//~dk\nconst isAuthorised = config.auth.isAuthenticated()\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const [collapsed, setCollapsed] = React.useState(false);\n  const [title, setTitle] = React.useState('Home');\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n    setCollapsed(false);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n    setCollapsed(false);\n  };\n  const handleDrawerCollapsed = () => {\n    setCollapsed(true);\n    setOpen(false);\n  };\n  const onItemClick = title => () => {\n    setTitle(title);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      {/* This is the header AppBar */}\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, \n          open && classes.appBarShift, collapsed && classes.appBar)}>\n        <Toolbar title={title} className={classes.toolbar}>\n\n          {/* The Menu icon exposes the left pane menu bar */}\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          {/* The title is set by the components */}\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            {title}\n          </Typography>\n\n          {/* For kicks */}\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={2} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      {/* The Router component routes URLs to your components */}\n      <Router history={history} title={title} >\n\n        {/* Drawers are left pane menu items in React-speak */}\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.drawerPaper, \n              !open && classes.drawerPaperClose,\n              collapsed && classes.drawerPaperCollapsed)\n          }}\n          open={open}\n        >\n          <div className={classes.toolbarIcon}>\n\n            {/* This icon collapses the left pane enough to show menu item icons */}\n            <IconButton onClick={handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n\n          {/* Left pane menu items */}\n          <List>\n\n            {/* Tweets menu item*/}\n            <ListItem button component={Link} to=\"/tweets\" onClick={onItemClick('Tweets')}>\n              <ListItemIcon>\n                <DashboardIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Tweets\" />\n              { title === 'Tweets' && \n                <ListItemIcon>\n                  <IconButton onClick={handleDrawerCollapsed}>\n                    <ChevronLeftIcon />\n                  </IconButton>\n                </ListItemIcon>\n              }\n            </ListItem>\n\n            {/* Compose menu item*/}\n            <ListItem button component={Link} to=\"/compose\" onClick={onItemClick('Compose')}>\n              <ListItemIcon>\n                <DashboardIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Compose\" />\n              { title === 'Compose' && \n                <ListItemIcon>\n                  <IconButton onClick={handleDrawerCollapsed}>\n                    <ChevronLeftIcon />\n                  </IconButton>\n                </ListItemIcon>\n              }\n            </ListItem>\n\n            {/* SignUp menu item */}\n            <ListItem button component={Link} to=\"/signin\" onClick={onItemClick('Sign In')}>\n              <ListItemIcon>\n                <LayersIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Sign In\" />\n              { title === 'Sign In' && \n                <ListItemIcon>\n                  <IconButton onClick={handleDrawerCollapsed}>\n                    <ChevronLeftIcon />\n                  </IconButton>\n                </ListItemIcon>\n              }\n            </ListItem>\n          </List>\n        </Drawer>\n\n        {/* This is your mission control: Matches URLs above to your components */}\n        <main className={classes.content}>\n\n          {/* menu paths */}\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/tweets\" component={THome} />\n          <Route path=\"/compose\" component={Compose} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/password_reset\" component={PasswordReset} />\n          <Route path=\"/password_change\" component={PasswordChange} />\n          {/* <Route path=\"/activity\"><ActivityHome /></Route> */}\n        </main>\n      </Router>\n      \n      {/* Whatever you put here will appear on all your pages, style appropriately! */}\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Appbar from './components/Appbar.js';\nimport './App.css';\nimport _config from './config'\n\n// routing: https://reactrouter.com/web/api/Hooks\n// a2hs: https://dev.to/zvakh/a2hs-how-to-add-the-pwa-to-home-screen-27c4\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Appbar config={_config} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App; \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}